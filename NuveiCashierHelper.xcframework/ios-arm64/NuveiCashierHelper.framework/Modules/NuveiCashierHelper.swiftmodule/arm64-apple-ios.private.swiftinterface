// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name NuveiCashierHelper
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AVFoundation
import AVKit
import Foundation
import Swift
import Vision
import VisionKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_inheritsConvenienceInitializers public class CashierHelper : ObjectiveC.NSObject {
  public enum CashierAbility {
    case qr, card
    public var title: Swift.String {
      get
    }
    public static func == (a: NuveiCashierHelper.CashierHelper.CashierAbility, b: NuveiCashierHelper.CashierHelper.CashierAbility) -> Swift.Bool
    public func hash(into hasher: inout Swift.Hasher)
    public var hashValue: Swift.Int {
      get
    }
  }
  public static func setCashierBackButtonClicked(callback: (() -> Swift.Void)?)
  public static func versionNumber() -> Swift.String
  public static func update(url: Swift.String, with abilities: [NuveiCashierHelper.CashierHelper.CashierAbility]) throws -> Swift.String
  public static func connect(to webView: WebKit.WKWebView, viewController: UIKit.UIViewController, locale: Swift.String? = nil)
  @discardableResult
  public static func handleURL(_ url: Swift.String) throws -> Swift.Bool
  public func getAvailableLocale() -> [Swift.String]
  @objc override dynamic public init()
  @objc deinit
}
extension NuveiCashierHelper.CashierHelper : AVFoundation.AVCaptureMetadataOutputObjectsDelegate {
  @objc dynamic public func metadataOutput(_ output: AVFoundation.AVCaptureMetadataOutput, didOutput metadataObjects: [AVFoundation.AVMetadataObject], from connection: AVFoundation.AVCaptureConnection)
}
public enum NuveiCashierHelperError : Swift.Error {
  case notInitialized, wrongInput(_: Swift.String)
}
extension NuveiCashierHelper.CashierHelper.CashierAbility : Swift.Equatable {}
extension NuveiCashierHelper.CashierHelper.CashierAbility : Swift.Hashable {}
